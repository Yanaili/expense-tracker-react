{"version":3,"sources":["components/Header.js","utils/format.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","redux/actions/transactionsAction.js","components/TransactionList.js","components/AddTransaction.js","App.js","redux/reducers/transactionsReducer.js","redux/allReducers.js","index.js"],"names":["Header","title","defaultProps","numberWithCommas","x","toString","replace","Balance","total","useSelector","state","transactionsState","transactions","map","transaction","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","totalIncome","filter","totalExpense","className","Transaction","sign","dispatch","useDispatch","text","Math","abs","onClick","id","_id","a","axios","delete","type","payload","response","data","error","TransactionList","useEffect","get","res","console","log","length","AddTransaction","useState","setText","setAmount","htmlFor","value","onChange","e","target","placeholder","preventDefault","newTransaction","uuid","config","headers","post","App","defaultState","loading","transactionsReducer","action","allReducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2c3f3bc.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Header = ({ title }) => <h2>{title}</h2>;\r\n\r\nHeader.defaultProps = {\r\n  title: 'Expense Tracker',\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n","export const numberWithCommas = (x) => {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nexport const Balance = () => {\r\n  const transactions = useSelector(\r\n    (state) => state.transactionsState.transactions\r\n  );\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n  return (\r\n    <>\r\n      <h4>Your Balance:</h4>\r\n      <h1>{numberWithCommas(total)}$</h1>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nexport const IncomeExpenses = () => {\r\n  const transactions = useSelector(\r\n    (state) => state.transactionsState.transactions\r\n  );\r\n\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n\r\n  const totalIncome = amounts\r\n    .filter((item) => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const totalExpense = (\r\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  ).toFixed(2);\r\n\r\n  return (\r\n    <div className='inc-exp-container'>\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className='money plus'>{numberWithCommas(totalIncome)}$</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className='money minus'>{numberWithCommas(totalExpense)}$</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteTransaction } from '../redux/actions/transactionsAction';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport { numberWithCommas } from '../utils/format';\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n  const sign = transaction.amount > 0 ? '+' : '-';\r\n\r\n  const dispatch = useDispatch();\r\n  const onDeleteTransaction = () => {\r\n    dispatch(deleteTransaction(transaction._id));\r\n  };\r\n\r\n  return (\r\n    <li className={transaction.amount > 0 ? 'plus' : 'minus'}>\r\n      {transaction.text}{' '}\r\n      <span>\r\n        {' '}\r\n        {`${sign}${numberWithCommas(Math.abs(transaction.amount))}$`}\r\n      </span>\r\n      <button className='delete-btn' onClick={onDeleteTransaction}>\r\n        <DeleteForeverIcon />\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n","import axios from 'axios';\r\n\r\n//axios.defaults.baseURL = 'http://localhost:5000';\r\n\r\nexport const getTransactions = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get('/api/v1/transactions');\r\n    dispatch({\r\n      type: 'GET_TRANSACTIONS',\r\n      payload: res.data.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: 'TRANSACTION_ERROR',\r\n      payload: err.response.data.error,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addTransaction = (transaction) => async (dispatch) => {\r\n  const config = {\r\n    headers: { 'Content-Type': 'application/json' },\r\n  };\r\n\r\n  try {\r\n    const res = await axios.post('/api/v1/transactions', transaction, config);\r\n    dispatch({\r\n      type: 'ADD_TRANSACTION',\r\n      payload: res.data.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: 'TRANSACTION_ERROR',\r\n      payload: err.response.data.error,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteTransaction = (id) => async (dispatch) => {\r\n  try {\r\n    await axios.delete(`/api/v1/transactions/${id}`);\r\n    dispatch({\r\n      type: 'DELETE_TRANSACTION',\r\n      payload: id,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: 'TRANSACTION_ERROR',\r\n      payload: err.response.data.error,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Transaction } from './Transaction';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getTransactions } from '../redux/actions/transactionsAction';\r\n\r\nexport const TransactionList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getTransactions());\r\n  }, [dispatch]);\r\n\r\n  const transactions = useSelector(\r\n    (state) => state.transactionsState.transactions\r\n  );\r\n\r\n  console.log(transactions);\r\n\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      {!transactions.length ? (\r\n        <label>You have no transactions yet.</label>\r\n      ) : (\r\n        <ul className='list'>\r\n          {transactions.map((transaction) => (\r\n            <Transaction key={transaction._id} transaction={transaction} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport uuid from 'react-uuid';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTransaction } from '../redux/actions/transactionsAction';\r\n\r\nexport const AddTransaction = () => {\r\n  const [text, setText] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onAddTransaction = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newTransaction = {\r\n      id: uuid(),\r\n      text,\r\n      amount: +amount,\r\n    };\r\n\r\n    dispatch(addTransaction(newTransaction));\r\n    setText('');\r\n    setAmount('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3>Add new transaction</h3>\r\n      <form>\r\n        <div className='form-control'>\r\n          <label htmlFor='text'>Text</label>\r\n          <input\r\n            type='text'\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            placeholder='Enter text...'\r\n          />\r\n        </div>\r\n        <div className='form-control'>\r\n          <label htmlFor='amount'>\r\n            Amount <br />\r\n            (negative - expense, positive - income)\r\n          </label>\r\n          <input\r\n            type='number'\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            placeholder='Enter amount...'\r\n          />\r\n        </div>\r\n        <button className='btn' onClick={onAddTransaction}>\r\n          Add transaction\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <div className='container'>\n        <Header />\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const defaultState = {\r\n  transactions: [],\r\n  error: null,\r\n  loading: true,\r\n};\r\n\r\nconst transactionsReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case 'GET_TRANSACTIONS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        transactions: action.payload,\r\n      };\r\n    case 'ADD_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: [...state.transactions, action.payload],\r\n      };\r\n    case 'DELETE_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction) => transaction._id !== action.payload\r\n        ),\r\n      };\r\n    case 'TRANSACTION_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default transactionsReducer;\r\n","import { combineReducers } from 'redux';\r\nimport transactionsReducer from './reducers/transactionsReducer';\r\n\r\nconst allReducers = combineReducers({\r\n  transactionsState: transactionsReducer,\r\n});\r\n\r\nexport default allReducers;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport allReducers from './redux/allReducers';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(allReducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}